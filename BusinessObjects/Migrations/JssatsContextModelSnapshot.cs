// <auto-generated />
using System;
using BusinessObjects.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessObjects.Migrations
{
    [DbContext(typeof(JssatsContext))]
    partial class JssatsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObjects.Models.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BillId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("UserId");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            BillId = 1,
                            CustomerId = 1,
                            SaleDate = new DateTime(2024, 6, 7, 22, 15, 47, 340, DateTimeKind.Local).AddTicks(6291),
                            TotalAmount = 500.0,
                            UserId = 1
                        },
                        new
                        {
                            BillId = 2,
                            CustomerId = 2,
                            SaleDate = new DateTime(2024, 6, 7, 22, 15, 47, 340, DateTimeKind.Local).AddTicks(6293),
                            TotalAmount = 1200.0,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.BillJewelry", b =>
                {
                    b.Property<int>("BillJewelryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillJewelryId"));

                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.Property<int?>("JewelryId")
                        .HasColumnType("int");

                    b.HasKey("BillJewelryId");

                    b.HasIndex("BillId");

                    b.HasIndex("JewelryId");

                    b.ToTable("BillJewelries");

                    b.HasData(
                        new
                        {
                            BillJewelryId = 1,
                            BillId = 1,
                            JewelryId = 1
                        },
                        new
                        {
                            BillJewelryId = 2,
                            BillId = 1,
                            JewelryId = 2
                        },
                        new
                        {
                            BillJewelryId = 3,
                            BillId = 2,
                            JewelryId = 3
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.BillPromotion", b =>
                {
                    b.Property<int>("BillPromotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillPromotionId"));

                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("int");

                    b.HasKey("BillPromotionId");

                    b.HasIndex("BillId");

                    b.HasIndex("PromotionId");

                    b.ToTable("BillPromotions");

                    b.HasData(
                        new
                        {
                            BillPromotionId = 1,
                            BillId = 1,
                            PromotionId = 1
                        },
                        new
                        {
                            BillPromotionId = 2,
                            BillId = 2,
                            PromotionId = 1
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.Counter", b =>
                {
                    b.Property<int>("CounterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CounterId"));

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.HasKey("CounterId");

                    b.ToTable("Counters");

                    b.HasData(
                        new
                        {
                            CounterId = 1,
                            Number = 312
                        },
                        new
                        {
                            CounterId = 2,
                            Number = 231
                        },
                        new
                        {
                            CounterId = 3,
                            Number = 431
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Point")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "Ha Noi",
                            Name = "Nguyen Van A",
                            Phone = "0123456789"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "Ha Noi",
                            Name = "Nguyen Van B",
                            Phone = "0123456789"
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "Ha Noi",
                            Name = "Nguyen Van C",
                            Phone = "0123456789"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.GoldPrice", b =>
                {
                    b.Property<int>("GoldPriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GoldPriceId"));

                    b.Property<float>("BuyPrice")
                        .HasColumnType("real");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<float>("SellPrice")
                        .HasColumnType("real");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GoldPriceId");

                    b.ToTable("GoldPrices");

                    b.HasData(
                        new
                        {
                            GoldPriceId = 1,
                            BuyPrice = 1000f,
                            City = "Ha Noi",
                            LastUpdated = new DateTime(2024, 6, 7, 22, 15, 47, 340, DateTimeKind.Local).AddTicks(6374),
                            SellPrice = 1200f,
                            Type = "9999"
                        },
                        new
                        {
                            GoldPriceId = 2,
                            BuyPrice = 1200f,
                            City = "Ha Noi",
                            LastUpdated = new DateTime(2024, 6, 7, 22, 15, 47, 340, DateTimeKind.Local).AddTicks(6376),
                            SellPrice = 1400f,
                            Type = "SCJ"
                        },
                        new
                        {
                            GoldPriceId = 3,
                            BuyPrice = 1400f,
                            City = "Ha Noi",
                            LastUpdated = new DateTime(2024, 6, 7, 22, 15, 47, 340, DateTimeKind.Local).AddTicks(6378),
                            SellPrice = 1600f,
                            Type = "18k"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.Jewelry", b =>
                {
                    b.Property<int>("JewelryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JewelryId"));

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsSold")
                        .HasColumnType("bit");

                    b.Property<int>("JewelryTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("LaborCost")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JewelryId");

                    b.HasIndex("JewelryTypeId");

                    b.ToTable("Jewelries");

                    b.HasData(
                        new
                        {
                            JewelryId = 1,
                            Barcode = "AVC131",
                            IsSold = true,
                            JewelryTypeId = 1,
                            LaborCost = 312.0,
                            Name = "Vong tay"
                        },
                        new
                        {
                            JewelryId = 2,
                            Barcode = "SAC132",
                            IsSold = false,
                            JewelryTypeId = 2,
                            LaborCost = 231.0,
                            Name = "Nhan"
                        },
                        new
                        {
                            JewelryId = 3,
                            Barcode = "SACC3",
                            IsSold = true,
                            JewelryTypeId = 3,
                            LaborCost = 431.0,
                            Name = "Day chuyen"
                        },
                        new
                        {
                            JewelryId = 4,
                            Barcode = "SFA131",
                            IsSold = true,
                            JewelryTypeId = 2,
                            LaborCost = 552.0,
                            Name = "Vong tay Xanh"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.JewelryMaterial", b =>
                {
                    b.Property<int>("JewelryMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JewelryMaterialId"));

                    b.Property<int>("JewelryId")
                        .HasColumnType("int");

                    b.Property<int>("MasterPriceId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("JewelryMaterialId");

                    b.HasIndex("JewelryId");

                    b.HasIndex("MasterPriceId");

                    b.HasIndex("MaterialId");

                    b.ToTable("JewelryMaterials");

                    b.HasData(
                        new
                        {
                            JewelryMaterialId = 1,
                            JewelryId = 1,
                            MasterPriceId = 2,
                            MaterialId = 1,
                            Weight = 300f
                        },
                        new
                        {
                            JewelryMaterialId = 2,
                            JewelryId = 1,
                            MasterPriceId = 2,
                            MaterialId = 2,
                            Weight = 400f
                        },
                        new
                        {
                            JewelryMaterialId = 3,
                            JewelryId = 2,
                            MasterPriceId = 2,
                            MaterialId = 1,
                            Weight = 500f
                        },
                        new
                        {
                            JewelryMaterialId = 4,
                            JewelryId = 2,
                            MasterPriceId = 2,
                            MaterialId = 2,
                            Weight = 500f
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.JewelryType", b =>
                {
                    b.Property<int>("JewelryTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JewelryTypeId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JewelryTypeId");

                    b.ToTable("JewelryTypes");

                    b.HasData(
                        new
                        {
                            JewelryTypeId = 1,
                            Name = "Vong tay"
                        },
                        new
                        {
                            JewelryTypeId = 2,
                            Name = "Nhan"
                        },
                        new
                        {
                            JewelryTypeId = 3,
                            Name = "Day chuyen"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.MasterPrice", b =>
                {
                    b.Property<int>("MasterPriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MasterPriceId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("GoldPriceId")
                        .HasColumnType("int");

                    b.Property<float>("SellOutPrice")
                        .HasColumnType("real");

                    b.Property<int>("StonePriceId")
                        .HasColumnType("int");

                    b.HasKey("MasterPriceId");

                    b.HasIndex("GoldPriceId");

                    b.HasIndex("StonePriceId");

                    b.ToTable("MasterPrices");

                    b.HasData(
                        new
                        {
                            MasterPriceId = 1,
                            Date = new DateTime(2024, 6, 7, 22, 15, 47, 340, DateTimeKind.Local).AddTicks(6395),
                            GoldPriceId = 1,
                            SellOutPrice = 500f,
                            StonePriceId = 1
                        },
                        new
                        {
                            MasterPriceId = 2,
                            Date = new DateTime(2024, 6, 7, 22, 15, 47, 340, DateTimeKind.Local).AddTicks(6397),
                            GoldPriceId = 2,
                            SellOutPrice = 600f,
                            StonePriceId = 2
                        },
                        new
                        {
                            MasterPriceId = 3,
                            Date = new DateTime(2024, 6, 7, 22, 15, 47, 340, DateTimeKind.Local).AddTicks(6398),
                            GoldPriceId = 3,
                            SellOutPrice = 512f,
                            StonePriceId = 3
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaterialId");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            MaterialId = 1,
                            Description = "Vang 18k",
                            Name = "Vang"
                        },
                        new
                        {
                            MaterialId = 2,
                            Description = "Bac 9999",
                            Name = "Bac"
                        },
                        new
                        {
                            MaterialId = 3,
                            Description = "Kim cuong 1 ly",
                            Name = "Kim cuong"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.Promotion", b =>
                {
                    b.Property<int>("PromotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionId"));

                    b.Property<string>("ApproveManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DiscountRate")
                        .HasColumnType("float");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PromotionId");

                    b.ToTable("Promotions");

                    b.HasData(
                        new
                        {
                            PromotionId = 1,
                            Description = "Giam gia 10%",
                            DiscountRate = 1.0,
                            EndDate = new DateTime(2024, 6, 17, 22, 15, 47, 340, DateTimeKind.Local).AddTicks(6237),
                            StartDate = new DateTime(2024, 6, 7, 22, 15, 47, 340, DateTimeKind.Local).AddTicks(6224),
                            Type = "Giam gia"
                        },
                        new
                        {
                            PromotionId = 2,
                            Description = "Giam gia 20%",
                            DiscountRate = 2.0,
                            EndDate = new DateTime(2024, 6, 17, 22, 15, 47, 340, DateTimeKind.Local).AddTicks(6243),
                            StartDate = new DateTime(2024, 6, 7, 22, 15, 47, 340, DateTimeKind.Local).AddTicks(6243),
                            Type = "Giam gia"
                        },
                        new
                        {
                            PromotionId = 3,
                            Description = "Giam gia 30%",
                            DiscountRate = 3.0,
                            EndDate = new DateTime(2024, 6, 17, 22, 15, 47, 340, DateTimeKind.Local).AddTicks(6245),
                            StartDate = new DateTime(2024, 6, 7, 22, 15, 47, 340, DateTimeKind.Local).AddTicks(6245),
                            Type = "Giam gia"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.Purchase", b =>
                {
                    b.Property<int>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("IsBuyBack")
                        .HasColumnType("int");

                    b.Property<int?>("JewelryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("PurchasePrice")
                        .HasColumnType("float");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PurchaseId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("JewelryId");

                    b.HasIndex("UserId");

                    b.ToTable("Purchases");

                    b.HasData(
                        new
                        {
                            PurchaseId = 1,
                            CustomerId = 1,
                            IsBuyBack = 0,
                            JewelryId = 1,
                            PurchaseDate = new DateTime(2024, 6, 7, 22, 15, 47, 340, DateTimeKind.Local).AddTicks(6418),
                            PurchasePrice = 500.0,
                            UserId = 1
                        },
                        new
                        {
                            PurchaseId = 2,
                            CustomerId = 2,
                            IsBuyBack = 1,
                            JewelryId = 2,
                            PurchaseDate = new DateTime(2024, 6, 7, 22, 15, 47, 340, DateTimeKind.Local).AddTicks(6420),
                            PurchasePrice = 300.0,
                            UserId = 1
                        },
                        new
                        {
                            PurchaseId = 3,
                            CustomerId = 2,
                            IsBuyBack = 0,
                            JewelryId = 3,
                            PurchaseDate = new DateTime(2024, 6, 7, 22, 15, 47, 340, DateTimeKind.Local).AddTicks(6422),
                            PurchasePrice = 1000.0,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Manager"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Staff"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.StonePrice", b =>
                {
                    b.Property<int>("StonePriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StonePriceId"));

                    b.Property<float>("BuyPrice")
                        .HasColumnType("real");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<float>("SellPrice")
                        .HasColumnType("real");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StonePriceId");

                    b.ToTable("StonePrices");

                    b.HasData(
                        new
                        {
                            StonePriceId = 1,
                            BuyPrice = 300f,
                            City = "Ha Noi",
                            LastUpdated = new DateTime(2024, 6, 7, 22, 15, 47, 340, DateTimeKind.Local).AddTicks(6352),
                            SellPrice = 400f,
                            Type = "Ruby"
                        },
                        new
                        {
                            StonePriceId = 2,
                            BuyPrice = 400f,
                            City = "Ha Noi",
                            LastUpdated = new DateTime(2024, 6, 7, 22, 15, 47, 340, DateTimeKind.Local).AddTicks(6354),
                            SellPrice = 500f,
                            Type = "Sapphire"
                        },
                        new
                        {
                            StonePriceId = 3,
                            BuyPrice = 500f,
                            City = "Ha Noi",
                            LastUpdated = new DateTime(2024, 6, 7, 22, 15, 47, 340, DateTimeKind.Local).AddTicks(6355),
                            SellPrice = 600f,
                            Type = "Emerald"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("CounterId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("CounterId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CounterId = 1,
                            Email = "nghialoe46a2gmail.com",
                            Password = "5678",
                            RoleId = 1,
                            Status = false,
                            Username = "admin Nghia"
                        },
                        new
                        {
                            UserId = 2,
                            CounterId = 2,
                            Email = "JohnDoe@gmail.com",
                            Password = "1234",
                            RoleId = 2,
                            Status = false,
                            Username = "manager John Doe"
                        },
                        new
                        {
                            UserId = 3,
                            CounterId = 3,
                            Email = "Chis@yahho.com",
                            Password = "4321",
                            RoleId = 3,
                            Status = false,
                            Username = "staff Chis Nguyen"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Models.Warranty", b =>
                {
                    b.Property<int>("WarrantyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarrantyId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("JewelryId")
                        .HasColumnType("int");

                    b.HasKey("WarrantyId");

                    b.HasIndex("JewelryId")
                        .IsUnique();

                    b.ToTable("Warranties");
                });

            modelBuilder.Entity("BusinessObjects.Models.Bill", b =>
                {
                    b.HasOne("BusinessObjects.Models.Customer", "Customer")
                        .WithMany("Bills")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BusinessObjects.Models.User", "User")
                        .WithMany("Bills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Customer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObjects.Models.BillJewelry", b =>
                {
                    b.HasOne("BusinessObjects.Models.Bill", "Bill")
                        .WithMany("BillJewelries")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BusinessObjects.Models.Jewelry", "Jewelry")
                        .WithMany("BillJewelries")
                        .HasForeignKey("JewelryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Bill");

                    b.Navigation("Jewelry");
                });

            modelBuilder.Entity("BusinessObjects.Models.BillPromotion", b =>
                {
                    b.HasOne("BusinessObjects.Models.Bill", "Bill")
                        .WithMany("BillPromotions")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BusinessObjects.Models.Promotion", "Promotion")
                        .WithMany("BillPromotions")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Bill");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("BusinessObjects.Models.Jewelry", b =>
                {
                    b.HasOne("BusinessObjects.Models.JewelryType", "JewelryType")
                        .WithMany("Jewelries")
                        .HasForeignKey("JewelryTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("JewelryType");
                });

            modelBuilder.Entity("BusinessObjects.Models.JewelryMaterial", b =>
                {
                    b.HasOne("BusinessObjects.Models.Jewelry", "Jewelry")
                        .WithMany("JewelryMaterials")
                        .HasForeignKey("JewelryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BusinessObjects.Models.MasterPrice", "MasterPrice")
                        .WithMany("JewelryMaterials")
                        .HasForeignKey("MasterPriceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BusinessObjects.Models.Material", "Material")
                        .WithMany("JewelryMaterials")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Jewelry");

                    b.Navigation("MasterPrice");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("BusinessObjects.Models.MasterPrice", b =>
                {
                    b.HasOne("BusinessObjects.Models.GoldPrice", "GoldPrice")
                        .WithMany("MasterPrices")
                        .HasForeignKey("GoldPriceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BusinessObjects.Models.StonePrice", "StonePrice")
                        .WithMany("MasterPrices")
                        .HasForeignKey("StonePriceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("GoldPrice");

                    b.Navigation("StonePrice");
                });

            modelBuilder.Entity("BusinessObjects.Models.Purchase", b =>
                {
                    b.HasOne("BusinessObjects.Models.Customer", "Customer")
                        .WithMany("Purchases")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BusinessObjects.Models.Jewelry", "Jewelry")
                        .WithMany("Purchases")
                        .HasForeignKey("JewelryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BusinessObjects.Models.User", "User")
                        .WithMany("Purchases")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Customer");

                    b.Navigation("Jewelry");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObjects.Models.User", b =>
                {
                    b.HasOne("BusinessObjects.Models.Counter", "Counter")
                        .WithMany("Users")
                        .HasForeignKey("CounterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BusinessObjects.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Counter");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BusinessObjects.Models.Warranty", b =>
                {
                    b.HasOne("BusinessObjects.Models.Jewelry", "Jewelry")
                        .WithOne("Warranty")
                        .HasForeignKey("BusinessObjects.Models.Warranty", "JewelryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Jewelry");
                });

            modelBuilder.Entity("BusinessObjects.Models.Bill", b =>
                {
                    b.Navigation("BillJewelries");

                    b.Navigation("BillPromotions");
                });

            modelBuilder.Entity("BusinessObjects.Models.Counter", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BusinessObjects.Models.Customer", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("BusinessObjects.Models.GoldPrice", b =>
                {
                    b.Navigation("MasterPrices");
                });

            modelBuilder.Entity("BusinessObjects.Models.Jewelry", b =>
                {
                    b.Navigation("BillJewelries");

                    b.Navigation("JewelryMaterials");

                    b.Navigation("Purchases");

                    b.Navigation("Warranty");
                });

            modelBuilder.Entity("BusinessObjects.Models.JewelryType", b =>
                {
                    b.Navigation("Jewelries");
                });

            modelBuilder.Entity("BusinessObjects.Models.MasterPrice", b =>
                {
                    b.Navigation("JewelryMaterials");
                });

            modelBuilder.Entity("BusinessObjects.Models.Material", b =>
                {
                    b.Navigation("JewelryMaterials");
                });

            modelBuilder.Entity("BusinessObjects.Models.Promotion", b =>
                {
                    b.Navigation("BillPromotions");
                });

            modelBuilder.Entity("BusinessObjects.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BusinessObjects.Models.StonePrice", b =>
                {
                    b.Navigation("MasterPrices");
                });

            modelBuilder.Entity("BusinessObjects.Models.User", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
