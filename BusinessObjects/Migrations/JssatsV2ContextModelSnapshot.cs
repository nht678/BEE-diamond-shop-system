// <auto-generated />
using System;
using DAO.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessObjects.Migrations
{
    [DbContext(typeof(JssatsV2Context))]
    partial class JssatsV2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObjects.Models.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SaleDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BillId")
                        .HasName("PK__Bill__11F2FC6A0B5B397C");

                    b.HasIndex("CustomerId");

                    b.HasIndex("UserId");

                    b.ToTable("Bill", (string)null);
                });

            modelBuilder.Entity("BusinessObjects.Models.BillJewelry", b =>
                {
                    b.Property<int>("BillJewelryId")
                        .HasColumnType("int");

                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.Property<int?>("JewelryId")
                        .HasColumnType("int");

                    b.HasKey("BillJewelryId")
                        .HasName("PK__BillJewe__22A11463AA7B6F89");

                    b.HasIndex("BillId");

                    b.HasIndex("JewelryId");

                    b.ToTable("BillJewelry", (string)null);
                });

            modelBuilder.Entity("BusinessObjects.Models.BillPromotion", b =>
                {
                    b.Property<int>("BillPromotionId")
                        .HasColumnType("int");

                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("int");

                    b.HasKey("BillPromotionId")
                        .HasName("PK__BillProm__470D21BE61BB07A5");

                    b.HasIndex("BillId");

                    b.HasIndex("PromotionId");

                    b.ToTable("BillPromotion", (string)null);
                });

            modelBuilder.Entity("BusinessObjects.Models.Counter", b =>
                {
                    b.Property<int>("CounterId")
                        .HasColumnType("int");

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.HasKey("CounterId")
                        .HasName("PK__Counter__F12879C45357F5DE");

                    b.ToTable("Counter", (string)null);
                });

            modelBuilder.Entity("BusinessObjects.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Point")
                        .HasColumnType("int");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64D82688C284");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("BusinessObjects.Models.GoldPrice", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<decimal>("BuyPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<decimal>("SellPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__GoldPrice__C2C7860CE0CA1F4C");

                    b.ToTable("GoldPrice", (string)null);
                });

            modelBuilder.Entity("BusinessObjects.Models.Jewelry", b =>
                {
                    b.Property<int>("JewelryId")
                        .HasColumnType("int");

                    b.Property<string>("Barcode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("BasePrice")
                        .HasColumnType("float");

                    b.Property<bool?>("IsSold")
                        .HasColumnType("bit");

                    b.Property<int?>("JewelryTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("LaborCost")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("StoneCost")
                        .HasColumnType("float");

                    b.Property<int?>("WarrantyId")
                        .HasColumnType("int");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("JewelryId")
                        .HasName("PK__Jewelry__807031D595331C05");

                    b.HasIndex("JewelryTypeId");

                    b.HasIndex("WarrantyId");

                    b.ToTable("Jewelry", (string)null);
                });

            modelBuilder.Entity("BusinessObjects.Models.JewelryType", b =>
                {
                    b.Property<int>("JewelryTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("JewelryTypeId")
                        .HasName("PK__JewelryT__7DCE2416537E000D");

                    b.ToTable("JewelryType", (string)null);
                });

            modelBuilder.Entity("BusinessObjects.Models.Promotion", b =>
                {
                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<string>("ApproveManager")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("DiscountRate")
                        .HasColumnType("float");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PromotionId")
                        .HasName("PK__Promotio__52C42FCF36D3DAF7");

                    b.ToTable("Promotion", (string)null);
                });

            modelBuilder.Entity("BusinessObjects.Models.Purchase", b =>
                {
                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("IsBuyBack")
                        .HasColumnType("int");

                    b.Property<int?>("JewelryId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("PurchaseDate")
                        .HasColumnType("date");

                    b.Property<double?>("PurchasePrice")
                        .HasColumnType("float");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PurchaseId")
                        .HasName("PK__Purchase__6B0A6BBEA5070B03");

                    b.HasIndex("CustomerId");

                    b.HasIndex("JewelryId");

                    b.HasIndex("UserId");

                    b.ToTable("Purchase", (string)null);
                });

            modelBuilder.Entity("BusinessObjects.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__8AFACE1AF3D3B665");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("BusinessObjects.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("CounterId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId")
                        .HasName("PK__User__1788CC4C022F84D8");

                    b.HasIndex("CounterId");

                    b.HasIndex("RoleId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("BusinessObjects.Models.Warranty", b =>
                {
                    b.Property<int>("WarrantyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.HasKey("WarrantyId")
                        .HasName("PK__Warranty__2ED3181357729305");

                    b.ToTable("Warranty", (string)null);
                });

            modelBuilder.Entity("BusinessObjects.Models.Bill", b =>
                {
                    b.HasOne("BusinessObjects.Models.Customer", "Customer")
                        .WithMany("Bills")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Bill__CustomerId__59063A47");

                    b.HasOne("BusinessObjects.Models.User", "User")
                        .WithMany("Bills")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Bill__UserId__59FA5E80");

                    b.Navigation("Customer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObjects.Models.BillJewelry", b =>
                {
                    b.HasOne("BusinessObjects.Models.Bill", "Bill")
                        .WithMany("BillJewelries")
                        .HasForeignKey("BillId")
                        .HasConstraintName("FK__BillJewel__BillI__534D60F1");

                    b.HasOne("BusinessObjects.Models.Jewelry", "Jewelry")
                        .WithMany("BillJewelries")
                        .HasForeignKey("JewelryId")
                        .HasConstraintName("FK__BillJewel__Jewel__52593CB8");

                    b.Navigation("Bill");

                    b.Navigation("Jewelry");
                });

            modelBuilder.Entity("BusinessObjects.Models.BillPromotion", b =>
                {
                    b.HasOne("BusinessObjects.Models.Bill", "Bill")
                        .WithMany("BillPromotions")
                        .HasForeignKey("BillId")
                        .HasConstraintName("FK__BillPromo__BillI__5165187F");

                    b.HasOne("BusinessObjects.Models.Promotion", "Promotion")
                        .WithMany("BillPromotions")
                        .HasForeignKey("PromotionId")
                        .HasConstraintName("FK__BillPromo__Promo__5070F446");

                    b.Navigation("Bill");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("BusinessObjects.Models.Jewelry", b =>
                {
                    b.HasOne("BusinessObjects.Models.JewelryType", "JewelryType")
                        .WithMany("Jewelries")
                        .HasForeignKey("JewelryTypeId")
                        .HasConstraintName("FK__Jewelry__Jewelry__4F7CD00D");

                    b.HasOne("BusinessObjects.Models.Warranty", "Warranty")
                        .WithMany("Jewelries")
                        .HasForeignKey("WarrantyId")
                        .HasConstraintName("FK__Jewelry__Warrant__4E88ABD4");

                    b.Navigation("JewelryType");

                    b.Navigation("Warranty");
                });

            modelBuilder.Entity("BusinessObjects.Models.Purchase", b =>
                {
                    b.HasOne("BusinessObjects.Models.Customer", "Customer")
                        .WithMany("Purchases")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Purchase__Custom__5629CD9C");

                    b.HasOne("BusinessObjects.Models.Jewelry", "Jewelry")
                        .WithMany("Purchases")
                        .HasForeignKey("JewelryId")
                        .HasConstraintName("FK__Purchase__Jewelr__5441852A");

                    b.HasOne("BusinessObjects.Models.User", "User")
                        .WithMany("Purchases")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Purchase__UserId__5535A963");

                    b.Navigation("Customer");

                    b.Navigation("Jewelry");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObjects.Models.User", b =>
                {
                    b.HasOne("BusinessObjects.Models.Counter", "Counter")
                        .WithMany("Users")
                        .HasForeignKey("CounterId")
                        .HasConstraintName("FK__User__CounterId__5812160E");

                    b.HasOne("BusinessObjects.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__User__RoleId__571DF1D5");

                    b.Navigation("Counter");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BusinessObjects.Models.Bill", b =>
                {
                    b.Navigation("BillJewelries");

                    b.Navigation("BillPromotions");
                });

            modelBuilder.Entity("BusinessObjects.Models.Counter", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BusinessObjects.Models.Customer", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("BusinessObjects.Models.Jewelry", b =>
                {
                    b.Navigation("BillJewelries");

                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("BusinessObjects.Models.JewelryType", b =>
                {
                    b.Navigation("Jewelries");
                });

            modelBuilder.Entity("BusinessObjects.Models.Promotion", b =>
                {
                    b.Navigation("BillPromotions");
                });

            modelBuilder.Entity("BusinessObjects.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BusinessObjects.Models.User", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("BusinessObjects.Models.Warranty", b =>
                {
                    b.Navigation("Jewelries");
                });
#pragma warning restore 612, 618
        }
    }
}
